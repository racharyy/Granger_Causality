# <<<<<<< Updated upstream
# methods = ["Logistic Regression", "Nearest Neighbors", "Linear SVM", "RBF SVM", "Gaussian Process",
# 		 "Decision Tree", "Random Forest", "Neural Net", "AdaBoost",
# 		 "Naive Bayes", "QDA"]

# features = ['Lambda','Category','Pretrained', 'Lambda + SE']

# lambda_results = [
# 0.6651000000000004, 
# 0.6850000000000004, 
# 0.6191999999999999, 
# 0.6112000000000002, 
# 0.622, 
# 0.6002000000000002, 
# 0.6233000000000006, 
# 0.6813000000000006, 
# 0.6339000000000001, 
# 0.6314000000000002, 
# 0.6077999999999998]

# cat_results = [
# 0.6099999999999995, 
# 0.6293000000000004, 
# 0.6099999999999995, 
# 0.6099999999999995, 
# 0.6050999999999997, 
# 0.5933999999999999, 
# 0.6416000000000005, 
# 0.6099999999999995, 
# 0.6242000000000002, 
# 0.5579000000000001, 
# 0.6095999999999996]

# both_results = [
# 0.6665000000000003, 
# 0.6315000000000004, 
# 0.6145999999999997, 
# 0.6092999999999998, 
# 0.6164999999999997, 
# 0.59, 
# 0.6234000000000005, 
# 0.6659000000000006, 
# 0.6168000000000001, 
# 0.5640999999999999, 
# 0.5307999999999999]

# pretrained_results = [
# 0.6697000000000004, 
# 0.6125999999999998, 
# 0.6443000000000001, 
# 0.6087000000000001, 
# 0.6423000000000002, 
# 0.6052, 
# 0.6525000000000002, 
# 0.6513000000000002, 
# 0.6458, 
# 0.36330000000000007, 
# 0.1458999999999999]


# lambda_and_se_results = [
# 0.6850000000000006,
# 0.7024000000000006,
# 0.6189999999999999,
# 0.6128000000000002,
# 0.6261,
# 0.6074000000000002,
# 0.6247000000000008,
# 0.6820000000000005,
# 0.6355,
# 0.6352000000000002,
# 0.6081999999999997]
# =======
# # methods = ["Logistic\nRegression", "Nearest\nNeighbors", "Linear\nSVM", "RBF\nSVM", "Gaussian\nProcess",
# # 		 "Decision\nTree", "Random\nForest", "Neural\nNet", "AdaBoost",
# # 		 "Naive\nBayes", "QDA"]

# # features = ['Lambda','Category','LaSE', 'SE augmented Lambda']

# # lambda_results = [
# # 0.6651000000000004, 
# # 0.6850000000000004, 
# # 0.6191999999999999, 
# # 0.6112000000000002, 
# # 0.622, 
# # 0.6002000000000002, 
# # 0.6233000000000006, 
# # 0.6813000000000006, 
# # 0.6339000000000001, 
# # 0.6314000000000002, 
# # 0.6077999999999998]

# # cat_results = [
# # 0.6099999999999995, 
# # 0.6293000000000004, 
# # 0.6099999999999995, 
# # 0.6099999999999995, 
# # 0.6050999999999997, 
# # 0.5933999999999999, 
# # 0.6416000000000005, 
# # 0.6099999999999995, 
# # 0.6242000000000002, 
# # 0.5579000000000001, 
# # 0.6095999999999996]

# # both_results = [
# # 0.6665000000000003, 
# # 0.6315000000000004, 
# # 0.6145999999999997, 
# # 0.6092999999999998, 
# # 0.6164999999999997, 
# # 0.59, 
# # 0.6234000000000005, 
# # 0.6659000000000006, 
# # 0.6168000000000001, 
# # 0.5640999999999999, 
# # 0.5307999999999999]

# # pretrained_results = [
# # 0.6697000000000004, 
# # 0.6125999999999998, 
# # 0.6443000000000001, 
# # 0.6087000000000001, 
# # 0.6423000000000002, 
# # 0.6052, 
# # 0.6525000000000002, 
# # 0.6513000000000002, 
# # 0.6458, 
# # 0.36330000000000007, 
# # 0.1458999999999999]


# # lambda_and_se_results = [
# # 0.6850000000000006,
# # 0.7024000000000006,
# # 0.6189999999999999,
# # 0.6128000000000002,
# # 0.6261,
# # 0.6074000000000002,
# # 0.6247000000000008,
# # 0.6820000000000005,
# # 0.6355,
# # 0.6352000000000002,
# # 0.6081999999999997]

methods = ["Logistic\nRegression", "Nearest\nNeighbors", "Linear\nSVM", "Decision\nTree",  "Neural\nNet"]

features = ['Category','Lambda', 'SE augmented Lambda']



lambda_results = [0.6684000000000002, 0.6807000000000006, 0.6273999999999998,  0.6081, 0.6702000000000001]
cat_results = [0.6099999999999995,  0.6363000000000007, 0.6099999999999995, 0.6006,  0.6099999999999995]
lambda_and_se_results = [0.6823000000000003, 0.7083000000000007, 0.6279999999999999, 0.6127000000000001, 0.6718000000000003]



lambda_ci = [0.0804962068390695, 0.07971265398536982,  0.0826691775210084, 0.08346897258367275, 0.0803854545311147]
cat_ci = [0.0833963715194414, 0.08225315145118858, 0.0833963715194414, 0.08374263625926863, 0.0833963715194414]
lambda_and_se_ci = [ 0.07960607793160122, 0.07771892231233843,  0.08264207750240214, 0.08329091307083812, 0.08028588934009781]


